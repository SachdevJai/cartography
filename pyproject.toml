[build-system]
requires = ["setuptools", "wheel", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "cartography"
dynamic = ["version"]
description = "Explore assets and their relationships across your technical infrastructure."
readme = "README.md"
#readme-content-type = "text/markdown"
license = { text = "Apache-2.0" }
maintainers = [
    { name = "Cartography Contributors" }
]
#homepage = "https://www.github.com/cartography-cncf/cartography"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Topic :: Security",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.10"
dependencies = [
    "backoff>=2.1.2",
    "boto3>=1.15.1",
    "botocore>=1.18.1",
    "dnspython>=1.15.0",
    "neo4j>=4.4.4,<5.0.0",
    "policyuniverse>=1.1.0.0",
    "google-api-python-client>=1.7.8",
    "oauth2client>=4.1.3",
    "marshmallow>=3.0.0rc7",
    "oci>=2.71.0",
    "okta<1.0.0",
    "pyyaml>=5.3.1",
    "requests>=2.22.0",
    "statsd",
    "packaging",
    "python-digitalocean>=1.16.0",
    "adal>=1.2.4",
    "azure-cli-core>=2.26.0",
    "azure-mgmt-compute>=5.0.0",
    "azure-mgmt-resource>=10.2.0",
    "azure-mgmt-cosmosdb>=6.0.0",
    "msrestazure >= 0.6.4",
    "azure-mgmt-storage>=16.0.0",
    "azure-mgmt-sql<=1.0.0",
    "azure-identity>=1.5.0",
    "kubernetes>=22.6.0",
    "pdpyras>=4.3.0",
    "crowdstrike-falconpy>=0.5.1",
    "python-dateutil",
    "xmltodict",
    "duo-client",
]

[dependency-groups]
dev = [
    "backoff>=2.1.2",
    "moto",
    "pre-commit",
    "pytest>=6.2.4",
    "pytest-mock",
    "pytest-cov==2.10.0",
    "pytest-rerunfailures",
    "types-PyYAML",
    "types-requests<2.31.0.7",
    "uv",
]

# https://stackoverflow.com/a/72547402
[tool.setuptools]
py-modules = []

# make sure to look inside cartography/cartography/ for cli command
[tool.setuptools.packages.find]
where = ["."]
include = ["cartography*"]

[project.optional-dependencies]
python_version_less_than_3_7 = [
    "importlib-resources"
]

[project.scripts]
cartography = "cartography.cli:main"
cartography-detectdrift = "cartography.driftdetect.cli:main"

[tool.setuptools.package-data]
"cartography" = ["py.typed"]
"cartography.data" = ["*.cypher", "*.yaml"]
"cartography.data.jobs.analysis" = ["*.json"]
"cartography.data.jobs.scoped_analysis" = ["*.json"]
"cartography.data.jobs.cleanup" = ["*.json"]

[tool.flake8]
format = "pylint"
exclude = [".svc", "CVS", ".bzr", ".hg", ".git", "__pycache__", "venv"]
max-line-length = 120

[tool.mypy]
disallow_any_generics = false
disallow_untyped_decorators = true
implicit_reexport = false
show_error_codes = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true
incremental = false

[tool.mypy.overrides]
"cartography.intel,cartography.intel.*" = { check_untyped_defs = true, disallow_incomplete_defs = true, disallow_untyped_calls = true, disallow_untyped_defs = true, strict_equality = true }
"cartography.graph.job,cartography.intel.github.*,cartography.util" = { check_untyped_defs = true, disallow_incomplete_defs = true, disallow_subclassing_any = true, disallow_untyped_calls = true, disallow_untyped_defs = true, no_implicit_optional = true, strict_equality = true, warn_unreachable = true, warn_return_any = true }
"cartography.intel.aws.kms" = { ignore_errors = true }
"cartography.intel.aws.route53" = { ignore_errors = true }
"cartography.intel.aws.s3" = { ignore_errors = true }
"cartography.intel.azure.cosmosdb" = { ignore_errors = true }
"cartography.intel.azure.storage" = { ignore_errors = true }
"cartography.intel.gcp.compute" = { ignore_errors = true }
"cartography.intel.okta.applications" = { ignore_errors = true }
"tests.*" = { disallow_untyped_defs = false, allow_redefinition = true }
"tests.unit.cartography.graph.test_querybuilder_build_attach_links_excs" = { ignore_errors = true }

[tool.coverage.report]
fail_under = 30

[tool.pytest.ini_options]
addopts = "--cov-config=setup.cfg --no-cov-on-fail --cov-report=term-missing:skip-covered --strict-markers"
markers = [
    "flaky: mark test as flaky"
]
